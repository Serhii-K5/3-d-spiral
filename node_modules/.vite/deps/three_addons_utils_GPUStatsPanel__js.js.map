{
  "version": 3,
  "sources": ["../../three/examples/jsm/utils/GPUStatsPanel.js"],
  "sourcesContent": ["import Stats from '../libs/stats.module.js';\n\n// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n// https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query_webgl2/\nexport class GPUStatsPanel extends Stats.Panel {\n\n\tconstructor( context, name = 'GPU MS' ) {\n\n\t\tsuper( name, '#f90', '#210' );\n\n\t\tlet isWebGL2 = true;\n\t\tlet extension = context.getExtension( 'EXT_disjoint_timer_query_webgl2' );\n\t\tif ( extension === null ) {\n\n\t\t\tisWebGL2 = false;\n\t\t\textension = context.getExtension( 'EXT_disjoint_timer_query' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'GPUStatsPanel: disjoint_time_query extension not available.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.context = context;\n\t\tthis.extension = extension;\n\t\tthis.maxTime = 30;\n\t\tthis.activeQueries = 0;\n\n\t\tthis.startQuery = function () {\n\n\t\t\tconst gl = this.context;\n\t\t\tconst ext = this.extension;\n\n\t\t\tif ( ext === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// create the query object\n\t\t\tlet query;\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tquery = gl.createQuery();\n\t\t\t\tgl.beginQuery( ext.TIME_ELAPSED_EXT, query );\n\n\t\t\t} else {\n\n\t\t\t\tquery = ext.createQueryEXT();\n\t\t\t\text.beginQueryEXT( ext.TIME_ELAPSED_EXT, query );\n\n\t\t\t}\n\n\t\t\tthis.activeQueries ++;\n\n\t\t\tconst checkQuery = () => {\n\n\t\t\t\t// check if the query is available and valid\n\t\t\t\tlet available, disjoint, ns;\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tavailable = gl.getQueryParameter( query, gl.QUERY_RESULT_AVAILABLE );\n\t\t\t\t\tdisjoint = gl.getParameter( ext.GPU_DISJOINT_EXT );\n\t\t\t\t\tns = gl.getQueryParameter( query, gl.QUERY_RESULT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tavailable = ext.getQueryObjectEXT( query, ext.QUERY_RESULT_AVAILABLE_EXT );\n\t\t\t\t\tdisjoint = gl.getParameter( ext.GPU_DISJOINT_EXT );\n\t\t\t\t\tns = ext.getQueryObjectEXT( query, ext.QUERY_RESULT_EXT );\n\n\t\t\t\t}\n\n\t\t\t\tconst ms = ns * 1e-6;\n\t\t\t\tif ( available ) {\n\n\t\t\t\t\t// update the display if it is valid\n\t\t\t\t\tif ( ! disjoint ) {\n\n\t\t\t\t\t\tthis.update( ms, this.maxTime );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.activeQueries --;\n\n\n\t\t\t\t} else if ( gl.isContextLost() === false ) {\n\n\t\t\t\t\t// otherwise try again the next frame\n\t\t\t\t\trequestAnimationFrame( checkQuery );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\trequestAnimationFrame( checkQuery );\n\n\t\t};\n\n\t\tthis.endQuery = function () {\n\n\t\t\t// finish the query measurement\n\t\t\tconst ext = this.extension;\n\t\t\tconst gl = this.context;\n\n\t\t\tif ( ext === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.endQuery( ext.TIME_ELAPSED_EXT );\n\n\t\t\t} else {\n\n\t\t\t\text.endQueryEXT( ext.TIME_ELAPSED_EXT );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n}\n"],
  "mappings": ";;;;;AAIO,IAAM,gBAAN,cAA4B,qBAAM,MAAM;AAAA,EAE9C,YAAa,SAAS,OAAO,UAAW;AAEvC,UAAO,MAAM,QAAQ,MAAO;AAE5B,QAAI,WAAW;AACf,QAAI,YAAY,QAAQ,aAAc,iCAAkC;AACxE,QAAK,cAAc,MAAO;AAEzB,iBAAW;AACX,kBAAY,QAAQ,aAAc,0BAA2B;AAE7D,UAAK,cAAc,MAAO;AAEzB,gBAAQ,KAAM,6DAA8D;AAAA,MAE7E;AAAA,IAED;AAEA,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,gBAAgB;AAErB,SAAK,aAAa,WAAY;AAE7B,YAAM,KAAK,KAAK;AAChB,YAAM,MAAM,KAAK;AAEjB,UAAK,QAAQ,MAAO;AAEnB;AAAA,MAED;AAGA,UAAI;AACJ,UAAK,UAAW;AAEf,gBAAQ,GAAG,YAAY;AACvB,WAAG,WAAY,IAAI,kBAAkB,KAAM;AAAA,MAE5C,OAAO;AAEN,gBAAQ,IAAI,eAAe;AAC3B,YAAI,cAAe,IAAI,kBAAkB,KAAM;AAAA,MAEhD;AAEA,WAAK;AAEL,YAAM,aAAa,MAAM;AAGxB,YAAI,WAAW,UAAU;AACzB,YAAK,UAAW;AAEf,sBAAY,GAAG,kBAAmB,OAAO,GAAG,sBAAuB;AACnE,qBAAW,GAAG,aAAc,IAAI,gBAAiB;AACjD,eAAK,GAAG,kBAAmB,OAAO,GAAG,YAAa;AAAA,QAEnD,OAAO;AAEN,sBAAY,IAAI,kBAAmB,OAAO,IAAI,0BAA2B;AACzE,qBAAW,GAAG,aAAc,IAAI,gBAAiB;AACjD,eAAK,IAAI,kBAAmB,OAAO,IAAI,gBAAiB;AAAA,QAEzD;AAEA,cAAM,KAAK,KAAK;AAChB,YAAK,WAAY;AAGhB,cAAK,CAAE,UAAW;AAEjB,iBAAK,OAAQ,IAAI,KAAK,OAAQ;AAAA,UAE/B;AAEA,eAAK;AAAA,QAGN,WAAY,GAAG,cAAc,MAAM,OAAQ;AAG1C,gCAAuB,UAAW;AAAA,QAEnC;AAAA,MAED;AAEA,4BAAuB,UAAW;AAAA,IAEnC;AAEA,SAAK,WAAW,WAAY;AAG3B,YAAM,MAAM,KAAK;AACjB,YAAM,KAAK,KAAK;AAEhB,UAAK,QAAQ,MAAO;AAEnB;AAAA,MAED;AAEA,UAAK,UAAW;AAEf,WAAG,SAAU,IAAI,gBAAiB;AAAA,MAEnC,OAAO;AAEN,YAAI,YAAa,IAAI,gBAAiB;AAAA,MAEvC;AAAA,IAED;AAAA,EAED;AAED;",
  "names": []
}
